/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package kasir_warmad.tampilan;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.*;
import java.math.BigDecimal;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import kasir_warmad.Kelola_barang;
import kasir_warmad.sistem.Koneksi;

public class tambah_barang extends javax.swing.JDialog {

    private Kelola_barang kelolaBarang;  // atribut untuk referensi form utama

    /**
     * Constructs a new tambah_barang dialog for adding items to the inventory.
     *
     * @param parent The parent frame of this dialog.
     * @param modal Whether the dialog is modal.
     * @param kelolaBarang The Kelola_barang instance to manage table refresh.
     */
    public tambah_barang(Frame parent, boolean modal, Kelola_barang kelolaBarang) {
        super(parent, modal);
        this.kelolaBarang = kelolaBarang;
        initComponents();
        loadKategoriBarang();
    }

    private void loadKategoriBarang() {
        KategoriBPK.addItem("-- Pilih Kategori --");
        KategoriBPK.addItem("Minuman");
        KategoriBPK.addItem("Eskrim");
        KategoriBPK.addItem("Snack");
        KategoriBPK.addItem("Alat Rumah Tangga");

//        try {
//            Connection conn = Koneksi.getKoneksi();
//            Statement stmt = conn.createStatement();
//            ResultSet rs = stmt.executeQuery("SELECT DISTINCT kategori_barang FROM barang_jual");
//            while (rs.next()) {
//                String kategori = rs.getString("kategori_barang");
//                if (kategori != null && !kategori.isEmpty() && !KategoriBPK.getItemAt(KategoriBPK.getItemCount() - 1).toString().equals(kategori)) {
//                    KategoriBPK.addItem(kategori);
//                }
//            }
//        } catch (SQLException e) {
//            JOptionPane.showMessageDialog(null, "Error loading categories: " + e.getMessage());
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        KodebarangBPK = new javax.swing.JTextField();
        VarianbarangBPK = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SimpanBPK = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        BatalBPK = new javax.swing.JButton();
        KategoriBPK = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        NamabarangBPK = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        KodebarangBPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KodebarangBPKActionPerformed(evt);
            }
        });
        KodebarangBPK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                KodebarangBPKKeyTyped(evt);
            }
        });

        VarianbarangBPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VarianbarangBPKActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Tambah Barang");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Nama Barang");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("Varian");

        SimpanBPK.setText("Simpan");
        SimpanBPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanBPKActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("Kategori");

        BatalBPK.setText("Batal");
        BatalBPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatalBPKActionPerformed(evt);
            }
        });

        KategoriBPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KategoriBPKActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel13.setText("Kode Barang");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NamabarangBPK)
                            .addComponent(KategoriBPK, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VarianbarangBPK)
                            .addComponent(SimpanBPK, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(KodebarangBPK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BatalBPK))
                    .addComponent(jLabel1))
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NamabarangBPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KodebarangBPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VarianbarangBPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(KategoriBPK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SimpanBPK)
                    .addComponent(BatalBPK))
                .addGap(198, 198, 198))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void KategoriBPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KategoriBPKActionPerformed

    }//GEN-LAST:event_KategoriBPKActionPerformed

    private void BatalBPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatalBPKActionPerformed
        this.dispose();

        // Buka kembali tampilan Kelola Barang
//        Kelola_barang kelola = new Kelola_barang(); // asumsi kamu punya JFrame bernama KelolaBarang
//        kelola.setVisible(true);
    }//GEN-LAST:event_BatalBPKActionPerformed

    private void SimpanBPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanBPKActionPerformed
        try {
            String idBarang = generateIDBarang();
            String sql = "INSERT INTO barang_jual (id_barang_jual, nama_barang, barcode_barang, varian, kategori_barang) VALUES (?, ?, ?, ?, ?)";
            Connection conn = Koneksi.getKoneksi();
            PreparedStatement pst = conn.prepareStatement(sql);

            pst.setString(1, idBarang);
            pst.setString(2, NamabarangBPK.getText());
            pst.setString(3, KodebarangBPK.getText());
            pst.setString(4, VarianbarangBPK.getText());
            pst.setString(5, KategoriBPK.getSelectedItem().toString());

            if (NamabarangBPK.getText().isEmpty() || KodebarangBPK.getText().isEmpty()
                    || KategoriBPK.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Harap isi semua kolom yang wajib!");
                return;
            }

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan");

            NamabarangBPK.setText("");
            KodebarangBPK.setText("");
            VarianbarangBPK.setText("");
            KategoriBPK.setSelectedIndex(0);

            this.dispose();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + e.getMessage());
        }
    }//GEN-LAST:event_SimpanBPKActionPerformed

    private void VarianbarangBPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VarianbarangBPKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VarianbarangBPKActionPerformed

    private void KodebarangBPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KodebarangBPKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KodebarangBPKActionPerformed

    private void KodebarangBPKKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KodebarangBPKKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); // Mengabaikan input selain angka
        }

    }//GEN-LAST:event_KodebarangBPKKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadKategoriBarang();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    private String generateIDBarang() throws SQLException {
        Connection conn = Koneksi.getKoneksi();
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT MAX(id_barang_jual) AS max_id FROM barang_jual");
        if (rs.next()) {
            String maxId = rs.getString("max_id");
            if (maxId != null) {
                int num = Integer.parseInt(maxId.replace("BRNGBR25", "")) + 1;
                return String.format("BRNGBR25%03d", num);
            }
        }
        return "BRNGBR25001";
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Kelola_barang kelolaBarang = new Kelola_barang();
                tambah_barang dialog = new tambah_barang(new javax.swing.JFrame(), true, kelolaBarang);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BatalBPK;
    private javax.swing.JComboBox<String> KategoriBPK;
    private javax.swing.JTextField KodebarangBPK;
    private javax.swing.JTextField NamabarangBPK;
    private javax.swing.JButton SimpanBPK;
    private javax.swing.JTextField VarianbarangBPK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
