/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package kasir_warmad.tampilan;

import com.formdev.flatlaf.intellijthemes.FlatArcOrangeIJTheme;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AbstractDocument;
import kasir_warmad.Kelola_barang;
import kasir_warmad.sistem.Koneksi;
import kasir_warmad.sistem.PilihBarang;
import utils.RupiahDocumentFilter;
import utils.filterAngka;
import javax.swing.text.AbstractDocument;
import javax.swing.text.PlainDocument;
import utils.RupiahUtil;

public class tambah_stok extends javax.swing.JDialog {

    HashMap<String, String> supplierMap = new HashMap<>();
    HashMap<String, String> barangMap = new HashMap<>();
    private Kelola_barang kelolaBarang;

    /**
     * Constructs a new tambah_barang dialog for adding items to the inventory.
     * 
     * @param parent The parent frame of this dialog.
     * @param modal Whether the dialog is modal.
     * @param kelolaBarang The Kelola_barang instance to manage table refresh.
     */
    public tambah_stok(Frame parent, boolean modal, Kelola_barang kelolaBarang) {
        super(parent, modal);
        this.kelolaBarang = kelolaBarang;
        initComponents();
        pilihBarang();
        IsiNamaSupplier();
        ((AbstractDocument) HargabeliPK.getDocument()).setDocumentFilter(new RupiahDocumentFilter());
        ((AbstractDocument) HargajualPK.getDocument()).setDocumentFilter(new RupiahDocumentFilter());
        filterAngka.hanyaAngka(StokPK);
    }

    private void kosongkan() {
        PilihbarangPK.setSelectedIndex(0);
        SuplierCb.setSelectedIndex(0);
        StokPK.setText("");
        HargabeliPK.setText("");
        HargajualPK.setText("");
        TglkadaluarsaPK.setDate(null);
        TglinputPK.setDate(null);
    }

    private void pilihBarang() {
        try {
            Connection conn = Koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT id_barang_jual, nama_barang FROM barang_jual");
            PilihbarangPK.removeAllItems();
            while (rs.next()) {
                String id = rs.getString("id_barang_jual");
                String nama = rs.getString("nama_barang");
                PilihBarang pb = new PilihBarang(id, nama);
                PilihbarangPK.addItem(pb);
                barangMap.put(nama, id);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error loading barang: " + e.getMessage());
        }
    }

    private void IsiNamaSupplier() {
        try {
            Connection conn = Koneksi.getKoneksi();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT id_supplier_barang, nama_supplier FROM supplier_barang");
            SuplierCb.removeAllItems();
            SuplierCb.addItem("-- Pilih Supplier --");
            while (rs.next()) {
                String id = rs.getString("id_supplier_barang");
                String nama = rs.getString("nama_supplier");
                supplierMap.put(nama, id);
                SuplierCb.addItem(nama);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error loading supplier: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ScrolltambahstokTS = new javax.swing.JScrollPane();
        panelluarTS = new javax.swing.JPanel();
        LtambahstokTS = new javax.swing.JLabel();
        LpilihbarangTS = new javax.swing.JLabel();
        LstokbarangTS = new javax.swing.JLabel();
        LtglkadaluarsaTS = new javax.swing.JLabel();
        PilihbarangPK = new javax.swing.JComboBox<>();
        BatalPK = new javax.swing.JButton();
        SimpanPK = new javax.swing.JButton();
        TglkadaluarsaPK = new com.toedter.calendar.JDateChooser();
        TglinputPK = new com.toedter.calendar.JDateChooser();
        LtglinputTS = new javax.swing.JLabel();
        LhargajualTS = new javax.swing.JLabel();
        LhargabeliTS = new javax.swing.JLabel();
        LnamasupplierTS = new javax.swing.JLabel();
        SuplierCb = new javax.swing.JComboBox<>();
        StokPK = new javax.swing.JTextField();
        HargajualPK = new javax.swing.JTextField();
        HargabeliPK = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 444));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        panelluarTS.setBackground(new java.awt.Color(255, 255, 255));
        panelluarTS.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LtambahstokTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LtambahstokTS.setText("Tambah Stok");
        panelluarTS.add(LtambahstokTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 19, -1, -1));

        LpilihbarangTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LpilihbarangTS.setText("Pilih Barang");
        panelluarTS.add(LpilihbarangTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 65, -1, -1));

        LstokbarangTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LstokbarangTS.setText(" Stok Barang");
        panelluarTS.add(LstokbarangTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 149, -1, -1));

        LtglkadaluarsaTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LtglkadaluarsaTS.setText("Tanggal Kadaluarsa");
        panelluarTS.add(LtglkadaluarsaTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 225, -1, -1));

        panelluarTS.add(PilihbarangPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 101, 480, -1));

        BatalPK.setText("Batal");
        BatalPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BatalPKActionPerformed(evt);
            }
        });
        panelluarTS.add(BatalPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 600, -1, -1));

        SimpanPK.setText("Simpan");
        SimpanPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanPKActionPerformed(evt);
            }
        });
        panelluarTS.add(SimpanPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 600, -1, -1));
        panelluarTS.add(TglkadaluarsaPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 261, 480, -1));
        panelluarTS.add(TglinputPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 337, 480, -1));

        LtglinputTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LtglinputTS.setText("Tanggal Input");
        panelluarTS.add(LtglinputTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 301, -1, -1));

        LhargajualTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LhargajualTS.setText("Harga Jual");
        panelluarTS.add(LhargajualTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 100, -1));

        LhargabeliTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LhargabeliTS.setText("Harga Beli");
        panelluarTS.add(LhargabeliTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, 79, -1));

        LnamasupplierTS.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LnamasupplierTS.setText("Nama Supplier");
        panelluarTS.add(LnamasupplierTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, -1));

        panelluarTS.add(SuplierCb, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 480, -1));
        panelluarTS.add(StokPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 480, -1));
        panelluarTS.add(HargajualPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 480, -1));
        panelluarTS.add(HargabeliPK, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 480, -1));

        ScrolltambahstokTS.setViewportView(panelluarTS);

        getContentPane().add(ScrolltambahstokTS);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void SimpanPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanPKActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        PilihBarang selectedBarang = (PilihBarang) PilihbarangPK.getSelectedItem();
        String selectedNamaSupplier = SuplierCb.getSelectedItem() != null ? SuplierCb.getSelectedItem().toString() : "";
        String idSupplierStr = supplierMap.get(selectedNamaSupplier);
        String stok = StokPK.getText();
        String hargaJual = HargajualPK.getText();
        String hargaBeli = HargabeliPK.getText();

        if (selectedBarang == null || selectedNamaSupplier.equals("-- Pilih Supplier --")
                || stok.isEmpty() || hargaJual.isEmpty() || hargaBeli.isEmpty()
                || TglkadaluarsaPK.getDate() == null || TglinputPK.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Harap isi semua kolom yang wajib!");
            return;
        }

        String tglKadaluarsa = sdf.format(TglkadaluarsaPK.getDate());
        String tglInput = sdf.format(TglinputPK.getDate());
        BigDecimal hargaJualBersih = RupiahUtil.parse(hargaJual);
        BigDecimal hargaBeliBersih = RupiahUtil.parse(hargaBeli);
        String stokBersih = stok.replaceAll("[^\\d]", "");

        try {
            Connection conn = Koneksi.getKoneksi();
            String idStok = generateIdStok(conn);

            String insertStok = "INSERT INTO stok_gudang (id_stok_gudang, id_barang_jual, id_supplier_barang, harga_jual, harga_beli, jumlah_stok, tanggal_kadaluarsa, tanggal_input) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement psStok = conn.prepareStatement(insertStok)) {
                psStok.setString(1, idStok);
                psStok.setString(2, selectedBarang.getIdBarang());
                psStok.setString(3, idSupplierStr);
                psStok.setBigDecimal(4, hargaJualBersih);
                psStok.setBigDecimal(5, hargaBeliBersih);
                psStok.setString(6, stokBersih);
                psStok.setString(7, tglKadaluarsa);
                psStok.setString(8, tglInput);
                psStok.executeUpdate();
            }

            JOptionPane.showMessageDialog(null, "Data stok berhasil disimpan!");
            if (kelolaBarang != null) {
                kelolaBarang.refreshTable();
            } else {
                JOptionPane.showMessageDialog(null, "Kelola_barang reference is null!");
            }
            kosongkan();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + e.getMessage());
        }
    }//GEN-LAST:event_SimpanPKActionPerformed

    private void BatalPKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BatalPKActionPerformed
        this.dispose();
    }//GEN-LAST:event_BatalPKActionPerformed

    private String generateIdStok(Connection conn) throws SQLException {
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT MAX(id_stok_gudang) AS max_id FROM stok_gudang");
        if (rs.next()) {
            String maxId = rs.getString("max_id");
            if (maxId != null) {
                int num = Integer.parseInt(maxId.replace("STKBRNG25", "")) + 1;
                return String.format("STKBRNG25%03d", num);
            }
        }
        return "STKBRNG25001";
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tambah_barang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 try {
            UIManager.setLookAndFeel(new FlatArcOrangeIJTheme());
            UIManager.put("Button.arc", 999);
            UIManager.put("defaultFont", new Font("Poppins", Font.BOLD, 14));
            Object put = UIManager.put("Component.arrowType", "triangle");
        } catch (Exception ex) {
            System.err.println("Gagal mengatur tema FlatLaf Arc Orange.");
            ex.printStackTrace();
        }
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Kelola_barang kelolaBarang = new Kelola_barang();
                tambah_stok dialog = new tambah_stok(new javax.swing.JFrame(), true, kelolaBarang);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BatalPK;
    private javax.swing.JTextField HargabeliPK;
    private javax.swing.JTextField HargajualPK;
    private javax.swing.JLabel LhargabeliTS;
    private javax.swing.JLabel LhargajualTS;
    private javax.swing.JLabel LnamasupplierTS;
    private javax.swing.JLabel LpilihbarangTS;
    private javax.swing.JLabel LstokbarangTS;
    private javax.swing.JLabel LtambahstokTS;
    private javax.swing.JLabel LtglinputTS;
    private javax.swing.JLabel LtglkadaluarsaTS;
    private javax.swing.JComboBox<PilihBarang> PilihbarangPK;
    private javax.swing.JScrollPane ScrolltambahstokTS;
    public javax.swing.JButton SimpanPK;
    private javax.swing.JTextField StokPK;
    private javax.swing.JComboBox<String> SuplierCb;
    private com.toedter.calendar.JDateChooser TglinputPK;
    private com.toedter.calendar.JDateChooser TglkadaluarsaPK;
    private javax.swing.JPanel panelluarTS;
    // End of variables declaration//GEN-END:variables
}
